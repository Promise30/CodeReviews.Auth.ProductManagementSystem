@using Microsoft.AspNetCore.Identity
@using ProductManagement.hasona23.Constants
@model UserSearchModel

@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="dropdown">
    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#userSearchCollapse"
            aria-expanded="false" aria-controls="userSearchCollapse">
        Search Users
    </button>
    <div class="collapse" id="userSearchCollapse">
        <div class="card card-body">
            <form method="get" asp-action="Index">
                <div class="form-group">
                    <label>Find by name:</label>
                    <input type="text" asp-for="SearchUserName" class="form-control"/>
                </div>

                <div class="form-group">
                    <label>Find by Email:</label>
                    <input type="text" asp-for="SearchEmail" class="form-control"/>
                </div>

                <div class="form-group">
                    <label>Email Confirmation:</label>
                    <select asp-for="IsEmailConfirmed" class="form-control">
                        <option value="@null">Both</option>
                        <option value="@true">Confirmed</option>
                        <option value="@false">Non-Confirmed</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Role:</label>
                    <select asp-for="SearchRole" class="form-control">
                        <option value="">All Roles</option>
                        @foreach (var role in Roles.GetAllRoles())
                        {
                            <option value="@role">@role</option>
                        }
                    </select>
                </div>

                <button type="submit" class="btn btn-primary">Search</button>
                <a asp-action="Index" class="btn btn-secondary">Reset</a>
            </form>
        </div>
        </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Users.First().UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Users.First().Email)
            </th>
            <th>
                Roles
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Users)
    {
           
        <tr>
            <td>
                @Html.DisplayFor(modelItem => user.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => user.Email)
            </td>
            <td>
                @foreach (string role in await UserManager.GetRolesAsync(user))
                {
                    <p>@role</p>
                }
            </td>
            <td>

                @if (!UserManager.GetRolesAsync(user).Result.Contains("Admin"))
                {
                    <span>
                        <a class="btn btn-primary" asp-action="Promote" asp-route-id="@user.Id">Promote To Staff</a> |
                        <a class="btn btn-warning" asp-action="Demote" asp-route-id="@user.Id">Demote to Customer</a>|
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@user.Id">Delete</a>
                    </span>
                }
            </td>
        </tr>
    }
    </tbody>
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item">
                <a class="page-link @(Model.HasPreviousPage ? "" : "disabled")"
                   asp-route-page="@(Model.CurrentPage-1)"
                   asp-route-searchUserName="@(Model.SearchUserName)"
                   asp-route-searchEmail="@(Model.SearchEmail)"
                   asp-route-searchRole="@(Model.SearchRole)"
                   asp-route-isEmailConfirmed="@(Model.IsEmailConfirmed)"
                   >Previous</a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item">
                    <a class="page-link"  asp-route-page="@(i)"
                       asp-route-searchUserName="@(Model.SearchUserName)"
                       asp-route-searchEmail="@(Model.SearchEmail)"
                       asp-route-searchRole="@(Model.SearchRole)"
                       asp-route-isEmailConfirmed="@(Model.IsEmailConfirmed)"
                    >@i</a>
                </li>
            }

            <li class="page-item">
                <a class="page-link @(Model.HasNextPage ? "" : "disabled")"  
                   asp-route-page="@(Model.CurrentPage+1)"
                   asp-route-searchUserName="@(Model.SearchUserName)"
                   asp-route-searchEmail="@(Model.SearchEmail)"
                   asp-route-searchRole="@(Model.SearchRole)"
                   asp-route-isEmailConfirmed="@(Model.IsEmailConfirmed)"
                >Next</a>
            </li>
        </ul>
    </nav>
</table>
